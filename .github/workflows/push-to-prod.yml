# Unique name for this workflow
name: Deploy to Production

# Definition when the workflow should run
on:
    pull_request:
      branches: [ master1 ]
      types:
        - closed
      paths:
        - 'force-app/**'
            

# Jobs to be executed
jobs:
    push-to-prod:
        runs-on: ubuntu-latest
        if: |
          ${{ github.actor != 'dependabot[bot]' }} &&
          github.event.pull_request.merged == true
        steps:
            # Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
                  mkdir ~/sfdx
                  tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
                  echo "$HOME/sfdx/bin" >> $GITHUB_PATH
                  ~/sfdx/bin/sfdx version

            # install SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
            - name: 'Installing sfdx git delta'
              run: | 
                  echo y | sfdx plugins:install sfdx-git-delta
                  sfdx plugins 

            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v2
              with:
                fetch-depth: 0

            # Put all test classes inside an env variable
            - name: 'Get all test files in repo'
              run: |
                    node ./parseAllTests.js              
                    ALLTESTS=$(cat testsAll.txt)       
                    echo "APEX_TESTS_ALL=$ALLTESTS" >> $GITHUB_ENV

            # Store secret for production org
            - name: 'Populate auth file with SFDX_URL secret of the production org'
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_PRODUCTION_URL}} > ./SFDX_PRODUCTION_URL.txt

            - name: 'Create delta packages for new, modified or deleted metadata'
              run: | 
                  mkdir changed-sources
                  sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/

            # Authenticate to org
            - name: 'Authenticate to Production Org'
              run: sfdx auth:sfdxurl:store -f ./SFDX_PRODUCTION_URL.txt -s -a production

            - name: 'Deploying to production org(s) - run all tests in repo'
              run:  | 
                  echo ${{env.APEX_TESTS_ALL}}
                  sfdx force:source:deploy -p "changed-sources/force-app" --testlevel RunSpecifiedTests --runtests ${{env.APEX_TESTS_ALL}} --json

            - name: 'Deploy destructive changes (if any) to production org(s)'
              run: sfdx force:mdapi:deploy -d "changed-sources/destructiveChanges" --checkonly --ignorewarnings 
